<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FlintCMS</title>
    <description>FlintCMS is a super-performant, content-focused Node.js Content Management System with a clear templating API and tons of other features.
</description>
    <link>https://flintcms.co/</link>
    <atom:link href="https://flintcms.co/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 05 Jun 2017 03:17:05 -0400</pubDate>
    <lastBuildDate>Mon, 05 Jun 2017 03:17:05 -0400</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Introduction</title>
        <description>&lt;p&gt;Flint is a CMS built to be easy to use and super flexible. Your content needs to fit into more layouts and environments than anyone but you can plan for, so Flint enables you to make the templates you need and fill it with your content.&lt;/p&gt;

&lt;p&gt;It’s a CMS that is built for those who want to fully design the front-end of their website without wanting to deal with static site generators or older content management systems (that are slow and use outdated technology).&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Every content management system falls into one of two categories: Can be customized a ton, but is very cumbersome to work with, or can be customized to little but is very straightforward. Only a few seem to find that perfect balance; &lt;a href=&quot;https://craftcms.com&quot;&gt;CraftCMS&lt;/a&gt;, which Flint is ultimately inspired by, is a great example. However, there are very few systems that take advantage of the performance of newer, “sexier” stacks that employ Node.js. Flint is really fast and is written using modern web standards so that newer developers can jump in, plus it’s open source so more and more people can help make it better.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/introduction/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/introduction/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Installation</title>
        <description>&lt;p&gt;Installing and getting up and running with Flint couldn’t be any easier. Assuming you have Node.js installed, you’ll want to run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install flintcms
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;entry-point&quot;&gt;Entry Point&lt;/h2&gt;

&lt;p&gt;Every JavaScript app needs an entry point. You’ll want to create a new JavaScript file, probably &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;, at the root of your project and fill it with something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Flint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;flintcms&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Flint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flintServer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Flint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;siteName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;My Amazing Flint Site!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;flintServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s the basics right there! When you’re ready, you can run the server by running &lt;code class=&quot;highlighter-rouge&quot;&gt;node index.js&lt;/code&gt; in your terminal.&lt;/p&gt;

&lt;h2 id=&quot;env&quot;&gt;.env&lt;/h2&gt;

&lt;p&gt;You will also need a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt; file to store sensitive environment variables, like database connection details. Here is what it would look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Secret settings
SESSION_SECRET= ...

# Debug settings
DEBUG= ...

# Mongo Credentials
DB_HOST= ...
DB_USER= ...
DB_PASS= ...

# Email Credentials
MAIL_HOST= ...
MAIL_USER= ...
MAIL_PASS= ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For a Mongo database, mLab is suggested but by no means mandatory. As for emails, Flint uses the &lt;a href=&quot;https://nodemailer.com/about/&quot;&gt;Nodemailer&lt;/a&gt; package which supports various SMTP services. Flint’s recommended one is Mailgun, and if you’re having trouble setting it up feel free to &lt;a href=&quot;hello@jasonet.co&quot;&gt;email me&lt;/a&gt; and I can give you Flint-specific Mailgun credentials.&lt;/p&gt;

&lt;p&gt;If you’re having trouble setting up any of these, feel free to &lt;a href=&quot;https://github.com/JasonEtco/flintcms/issues&quot;&gt;open up an issue&lt;/a&gt; detailing your experience.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/installation/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/installation/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Users</title>
        <description>&lt;p&gt;Unlike other content managment systems, Flint comes with unlimited usergroups for free. This means that as far as templating goes, there is only one type of user with potentially different usergroups (which makes templating easy to plan for).&lt;/p&gt;

&lt;p&gt;Every time the server is restarted, Flint checks to see if there is an Admin usergroup and, if necessary, creates one with all permission enabled. Deleting the Admin usergroup is disabled in the dashboard, but in case someone does it by mistake directly through the database or some other horrible mistake happens, Flint has you covered.&lt;/p&gt;

&lt;h2 id=&quot;public-registration&quot;&gt;Public Registration&lt;/h2&gt;

&lt;p&gt;Some websites need for their users to be able to signup for the site, rather than being given an account. In your Flint site’s settings (under &lt;code class=&quot;highlighter-rouge&quot;&gt;Settings/Site Settings&lt;/code&gt;) you can enable or disable the endpoints that allow for form or AJAX inputs.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/users/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/users/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Sections</title>
        <description>&lt;p&gt;Sections are how Flint categorizes different entries. A section defines what kind of information entries in that section can expect; when creating a section, you decide on which fields you want to show. Each section can use a different template file.&lt;/p&gt;

&lt;p&gt;Sections are the best way to group entries of a similar type. For example, in a food blog you might have a section for general recipes, then a section for your own personal restaurant critiques. The important thing to note is that entries in each of those two sections will have vastly different content, and so they should be designed and handled differently. Of course, this is totally up to you; the point of sections is to give you choices but not lock you into any specific functionality.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-new-section&quot;&gt;Creating a new Section&lt;/h2&gt;

&lt;p&gt;Creating a new Section is real easy; just head to your site’s Settings from the side menu, click &lt;em&gt;Sections&lt;/em&gt; and then the &lt;em&gt;New Section&lt;/em&gt; button in the top right. As you write the title of the section, you’ll see that the handle is created based on the title. That handle is how you’ll find entries in that section within the template. You can learn more about how sections are handled in templates &lt;a href=&quot;/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;plans-for-improvement&quot;&gt;Plans for Improvement&lt;/h2&gt;

&lt;p&gt;Create different types of sections, to be able to have different organizational features for the different types of content. For example, a general section to have different entries of the same level, and then a hierarchy-based section that can have nested entries (could be useful for documentation, wikis, etc.). If you have any inclination to talk about it, please &lt;a href=&quot;https://github.com/JasonEtco/flintcms/issues&quot;&gt;do so here!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/sections/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/sections/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Fields</title>
        <description>&lt;p&gt;Fields are the ways that your writers or content editors can fill in the spaces given to them in a section. For example, you might have a field that is a simple text input called &lt;em&gt;Subtitle&lt;/em&gt;, then just below it you could have a Rich Text field called &lt;em&gt;Main Content&lt;/em&gt;. This is a common pattern to represent two individual bits of content that, due to their individual template handles, can be styled and layed out completely separately.&lt;/p&gt;

&lt;p&gt;Fields can be reused throughout multiple sections and each come with customizable options to ensure that your content is consistent.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/fields/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/fields/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Entries</title>
        <description>&lt;p&gt;Entries are really the meat and potatoes of Flint. You can think of them as posts or articles, but they are effectively the individual documents that your website has. Entries are grouped within Sections to maintain the same styling and content expectations.&lt;/p&gt;

&lt;p&gt;Entries can have one of three statuses: &lt;code class=&quot;highlighter-rouge&quot;&gt;Live&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Draft&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Disabled&lt;/code&gt;. Live is fairly straightforward, but Draft and Disabled are separate to enable more specific user permissions.&lt;/p&gt;

&lt;p&gt;Because entries are the main way that content is added to your site, there are specific permissions that deal with them. For example, there is a permission that enables/disables the ability to create or edit a live entry.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/entries/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/entries/</guid>
        
        
        <category>docs</category>
        
      </item>
    
      <item>
        <title>Assets</title>
        <description>&lt;p&gt;Assets are, for now, images. These images are stored in the local file system on the server. When you upload a new asset, it is saved to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/public/assets/&lt;/code&gt; folder of your server. There is a special static route to the public folder as a part of the Flint server, so when linking to an asset in a template you’ll want to do something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/public/assets/myimage.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Future plans to improve assets includes adding more available file types and categorization (like sub-folders). If you want to help improve FlintCMS in this way, please &lt;a href=&quot;https://github.com/JasonEtco/flintcms/issues&quot;&gt;talk about it here&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 18:16:01 -0400</pubDate>
        <link>https://flintcms.co/docs/assets/</link>
        <guid isPermaLink="true">https://flintcms.co/docs/assets/</guid>
        
        
        <category>docs</category>
        
      </item>
    
  </channel>
</rss>
